knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(tidyverse)
library(survival)
setwd("/Users/mac/Library/CloudStorage/OneDrive-McGillUniversity/Work/Projects/Gender and brokerage/WomenLeaders_SocialNetworks")
library(readr)
directors_years <- read_csv("directors_years.csv")
View(directors_years)
directors_years %>% glimpse()
cox_model <- coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender + avg_constraint_at_debut + cluster(ID), data = directors_year, robust = TRUE)
cox_model <- coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender + avg_constraint_at_debut + cluster(ID), data = directors_years, robust = TRUE)
cox_model <- coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender + avg_constraint_at_debut + cluster(nconst_director), data = directors_years, robust = TRUE)
cox_model %>% summary()
coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender + avg_effective_size_at_debut + cluster(nconst_director), data = directors_years, robust = TRUE) %>% summary()
coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender + avg_local_clustering_at_debut + cluster(nconst_director), data = directors_years, robust = TRUE) %>% summary()
coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender * avg_constraint_at_debut + cluster(nconst_director), data = directors_years, robust = TRUE) %>% summary()
coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender * avg_effective_size_at_debut + cluster(nconst_director), data = directors_years, robust = TRUE) %>% summary()
coxph(Surv(start_time, stop_time, made_movie) ~ predicted_gender * avg_effective_size_at_debut + cluster(nconst_director), data = directors_years) %>% summary()
directors_years %>% select(-c('...1', 'Unnamed: 0'))
directors_years %>% select(-c('...1', 'Unnamed: 0')) -> directors_years
# Control variables selected by column range, as previously described
start_col_index <- which(names(directors_years) == "network_size")
end_col_index <- which(names(directors_years) == "year_2023")
control_vars <- names(directors_years)[start_col_index:end_col_index]
# Main predictors and their interaction
main_predictors <- c("predicted_gender", "avg_effective_size_at_debut")
interaction_term <- paste(main_predictors, collapse = " * ")  # Includes main effects and interaction
# Combine all predictors
all_predictors <- c(interaction_term, control_vars)
# Create the formula string
formula_predictors <- paste(all_predictors, collapse = " + ")
formula_str <- paste("Surv(start_time, stop_time, made_movie) ~", formula_predictors)
formula_str
# Control variables selected by column range, as previously described
start_col_index <- which(names(directors_years) == "network_size")
end_col_index <- which(names(directors_years) == "year_2023")
control_vars <- names(directors_years)[start_col_index:end_col_index]
# Main predictors and their interaction
main_predictors <- c("predicted_gender", "avg_effective_size_at_debut")
interaction_term <- paste(main_predictors, collapse = " * ")  # Includes main effects and interaction
# Combine all predictors
all_predictors <- c(interaction_term, control_vars)
formula_predictors <- paste(all_predictors, collapse = " + ")
# Creating the full formula string
formula_str <- paste("Surv(start_time, stop_time, made_movie) ~", formula_predictors)
# Convert the predictor part of the formula to a formula object
model_formula <- as.formula(formula_str)
# Fit the Cox model with robust variance to account for clustering
model_result <- coxph(model_formula,
data = directors_years,
cluster = directors_years$nconst_director,
robust = TRUE)
# Fit the Cox model with robust variance to account for clustering
model_result <- coxph(model_formula,
data = directors_years,
#cluster = directors_years$nconst_director,
robust = TRUE)
model_formula
library(janitor)
directors_years <- directors_years %>% clean_names()
# Control variables selected by column range, as previously described
start_col_index <- which(names(directors_years) == "network_size")
end_col_index <- which(names(directors_years) == "year_2023")
control_vars <- names(directors_years)[start_col_index:end_col_index]
# Main predictors and their interaction
main_predictors <- c("predicted_gender", "avg_effective_size_at_debut")
interaction_term <- paste(main_predictors, collapse = " * ")  # Includes main effects and interaction
# Combine all predictors
all_predictors <- c(interaction_term, control_vars)
formula_predictors <- paste(all_predictors, collapse = " + ")
# Creating the full formula string
formula_str <- paste("Surv(start_time, stop_time, made_movie) ~", formula_predictors)
# Convert the predictor part of the formula to a formula object
model_formula <- as.formula(formula_str)
# Fit the Cox model with robust variance to account for clustering
model_result <- coxph(model_formula,
data = directors_years,
cluster = directors_years$nconst_director,
robust = TRUE)
# View the summary of the model
summary(model_result)
options(scipen=999)
# View the summary of the model
summary(model_result)
# Control variables selected by column range, as previously described
start_col_index <- which(names(directors_years) == "network_size")
end_col_index <- which(names(directors_years) == "year_2023")
control_vars <- names(directors_years)[start_col_index:end_col_index]
# Main predictors and their interaction
main_predictors <- c("predicted_gender", "avg_local_clustering_at_debut")
interaction_term <- paste(main_predictors, collapse = " * ")  # Includes main effects and interaction
# Combine all predictors
all_predictors <- c(interaction_term, control_vars)
formula_predictors <- paste(all_predictors, collapse = " + ")
# Creating the full formula string
formula_str <- paste("Surv(start_time, stop_time, made_movie) ~", formula_predictors)
# Convert the predictor part of the formula to a formula object
model_formula <- as.formula(formula_str)
# Fit the Cox model with robust variance to account for clustering
model_result <- coxph(model_formula,
data = directors_years,
cluster = directors_years$nconst_director,
robust = TRUE)
options(scipen=999)
# View the summary of the model
summary(model_result)
# Control variables selected by column range, as previously described
start_col_index <- which(names(directors_years) == "network_size")
end_col_index <- which(names(directors_years) == "year_2023")
control_vars <- names(directors_years)[start_col_index:end_col_index]
# Main predictors and their interaction
main_predictors <- c("predicted_gender", "max_constraint_at_debut")
interaction_term <- paste(main_predictors, collapse = " * ")  # Includes main effects and interaction
# Combine all predictors
all_predictors <- c(interaction_term, control_vars)
formula_predictors <- paste(all_predictors, collapse = " + ")
# Creating the full formula string
formula_str <- paste("Surv(start_time, stop_time, made_movie) ~", formula_predictors)
# Convert the predictor part of the formula to a formula object
model_formula <- as.formula(formula_str)
# Fit the Cox model with robust variance to account for clustering
model_result <- coxph(model_formula,
data = directors_years,
cluster = directors_years$nconst_director,
robust = TRUE)
options(scipen=999)
# View the summary of the model
summary(model_result)
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct()
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% psych::describe(avg_local_clustering_at_debut)
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% psych::describe('avg_local_clustering_at_debut')
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% select(avg_local_clustering_at_debut) %>% psych::describe()
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% select(avg_local_clustering_at_debut)
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% select(avg_local_clustering_at_debut) %>% psych::describe()
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% select(avg_local_clustering_at_debut)
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% select(avg_local_clustering_at_debut) %>% describe()
directors_years %>% select(nconst_director, avg_local_clustering_at_debut) %>% distinct() %>% psych::describe()
